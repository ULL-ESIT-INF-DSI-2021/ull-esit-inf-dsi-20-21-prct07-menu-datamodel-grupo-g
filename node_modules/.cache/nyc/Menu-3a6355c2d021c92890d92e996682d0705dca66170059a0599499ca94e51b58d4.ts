"use strict";function cov_1t05nde8ir(){var path="/home/usuario/prct07/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-g/src/Menu.ts";var hash="08be79600658c48cfefc9e336e040af85159483b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/usuario/prct07/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-g/src/Menu.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:22}},"2":{start:{line:9,column:8},end:{line:9,column:25}},"3":{start:{line:10,column:8},end:{line:10,column:33}},"4":{start:{line:11,column:8},end:{line:11,column:39}},"5":{start:{line:12,column:8},end:{line:12,column:41}},"6":{start:{line:13,column:8},end:{line:13,column:29}},"7":{start:{line:14,column:8},end:{line:21,column:9}},"8":{start:{line:15,column:12},end:{line:19,column:13}},"9":{start:{line:16,column:16},end:{line:18,column:17}},"10":{start:{line:17,column:20},end:{line:17,column:73}},"11":{start:{line:20,column:12},end:{line:20,column:113}},"12":{start:{line:28,column:8},end:{line:28,column:283}},"13":{start:{line:34,column:8},end:{line:34,column:22}},"14":{start:{line:35,column:8},end:{line:35,column:173}},"15":{start:{line:36,column:8},end:{line:38,column:9}},"16":{start:{line:37,column:12},end:{line:37,column:64}},"17":{start:{line:39,column:8},end:{line:39,column:51}},"18":{start:{line:40,column:19},end:{line:40,column:40}},"19":{start:{line:41,column:8},end:{line:43,column:9}},"20":{start:{line:42,column:12},end:{line:42,column:64}},"21":{start:{line:44,column:8},end:{line:44,column:69}},"22":{start:{line:45,column:8},end:{line:45,column:22}},"23":{start:{line:52,column:8},end:{line:52,column:163}},"24":{start:{line:59,column:24},end:{line:59,column:33}},"25":{start:{line:60,column:24},end:{line:60,column:25}},"26":{start:{line:61,column:23},end:{line:61,column:24}},"27":{start:{line:62,column:22},end:{line:62,column:23}},"28":{start:{line:63,column:19},end:{line:63,column:20}},"29":{start:{line:64,column:8},end:{line:75,column:9}},"30":{start:{line:65,column:12},end:{line:65,column:227}},"31":{start:{line:66,column:12},end:{line:66,column:222}},"32":{start:{line:67,column:12},end:{line:67,column:217}},"33":{start:{line:68,column:12},end:{line:68,column:202}},"34":{start:{line:71,column:12},end:{line:71,column:179}},"35":{start:{line:72,column:12},end:{line:72,column:175}},"36":{start:{line:73,column:12},end:{line:73,column:171}},"37":{start:{line:74,column:12},end:{line:74,column:159}},"38":{start:{line:76,column:8},end:{line:76,column:44}},"39":{start:{line:77,column:8},end:{line:77,column:46}},"40":{start:{line:78,column:8},end:{line:78,column:42}},"41":{start:{line:79,column:8},end:{line:79,column:36}},"42":{start:{line:80,column:8},end:{line:80,column:25}},"43":{start:{line:86,column:8},end:{line:86,column:209}},"44":{start:{line:87,column:8},end:{line:89,column:9}},"45":{start:{line:88,column:12},end:{line:88,column:64}},"46":{start:{line:92,column:0},end:{line:92,column:20}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:4},end:{line:8,column:5}},loc:{start:{line:8,column:67},end:{line:22,column:5}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:27,column:4},end:{line:27,column:5}},loc:{start:{line:27,column:15},end:{line:29,column:5}},line:27},"2":{name:"(anonymous_2)",decl:{start:{line:33,column:4},end:{line:33,column:5}},loc:{start:{line:33,column:16},end:{line:46,column:5}},line:33},"3":{name:"(anonymous_3)",decl:{start:{line:51,column:4},end:{line:51,column:5}},loc:{start:{line:51,column:16},end:{line:53,column:5}},line:51},"4":{name:"(anonymous_4)",decl:{start:{line:58,column:4},end:{line:58,column:5}},loc:{start:{line:58,column:21},end:{line:81,column:5}},line:58},"5":{name:"(anonymous_5)",decl:{start:{line:85,column:4},end:{line:85,column:5}},loc:{start:{line:85,column:22},end:{line:90,column:5}},line:85}},branchMap:{"0":{loc:{start:{line:14,column:8},end:{line:21,column:9}},type:"if",locations:[{start:{line:14,column:8},end:{line:21,column:9}},{start:{line:14,column:8},end:{line:21,column:9}}],line:14},"1":{loc:{start:{line:14,column:12},end:{line:14,column:144}},type:"binary-expr",locations:[{start:{line:14,column:12},end:{line:14,column:48}},{start:{line:14,column:52},end:{line:14,column:95}},{start:{line:14,column:99},end:{line:14,column:144}}],line:14},"2":{loc:{start:{line:15,column:12},end:{line:19,column:13}},type:"if",locations:[{start:{line:15,column:12},end:{line:19,column:13}},{start:{line:15,column:12},end:{line:19,column:13}}],line:15},"3":{loc:{start:{line:16,column:16},end:{line:18,column:17}},type:"if",locations:[{start:{line:16,column:16},end:{line:18,column:17}},{start:{line:16,column:16},end:{line:18,column:17}}],line:16},"4":{loc:{start:{line:28,column:15},end:{line:28,column:282}},type:"cond-expr",locations:[{start:{line:28,column:42},end:{line:28,column:176}},{start:{line:28,column:179},end:{line:28,column:282}}],line:28},"5":{loc:{start:{line:36,column:8},end:{line:38,column:9}},type:"if",locations:[{start:{line:36,column:8},end:{line:38,column:9}},{start:{line:36,column:8},end:{line:38,column:9}}],line:36},"6":{loc:{start:{line:52,column:15},end:{line:52,column:162}},type:"cond-expr",locations:[{start:{line:52,column:42},end:{line:52,column:107}},{start:{line:52,column:110},end:{line:52,column:162}}],line:52},"7":{loc:{start:{line:64,column:8},end:{line:75,column:9}},type:"if",locations:[{start:{line:64,column:8},end:{line:75,column:9}},{start:{line:64,column:8},end:{line:75,column:9}}],line:64},"8":{loc:{start:{line:87,column:8},end:{line:89,column:9}},type:"if",locations:[{start:{line:87,column:8},end:{line:89,column:9}},{start:{line:87,column:8},end:{line:89,column:9}}],line:87}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0],"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},inputSourceMap:{version:3,file:"/home/usuario/prct07/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-g/src/Menu.ts",sources:["/home/usuario/prct07/ull-esit-inf-dsi-20-21-prct07-menu-datamodel-grupo-g/src/Menu.ts"],names:[],mappings:"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",sourcesContent:["import { Food } from './Food'\nimport {Plate} from './Plate'\n\n\nexport class Menu {\n  /**\n   * Constructor de la clase Men\xFA, que representa un Menu, mediante un nombre, y un plato de cada categor\xEDa. El men\xFA puede tener o no un postre.\n   */\n  constructor(public name: string, private entrante: Plate, private primerPlato: Plate, private segundoPlato: Plate, private postre?: Plate){\n    if (entrante.getCategory() != 'Entrante' || primerPlato.getCategory() != 'Primer Plato' || segundoPlato.getCategory() != 'Segundo Plato') {\n      if (postre != undefined) {\n        if (postre.getCategory() != 'Postre') {\n          throw 'El postre no se corresponde con su categor\xEDa'\n        }\n      }\n    throw 'Se tiene que a\xF1adir un entrante, primer plato, segundo plato, obligatoriamente en ese orden.'\n    }\n  }\n\n  /**\n   * M\xE9todo que devuelve el precio total de men\xFA\n   * @returns Precio de men\xFA\n   */\n  getPrice() {\n    return this.postre != undefined ? this.entrante.priceGenerator() + this.primerPlato.priceGenerator() + this.segundoPlato.priceGenerator() + this.postre.priceGenerator() : this.entrante.priceGenerator() + this.primerPlato.priceGenerator() + this.segundoPlato.priceGenerator()\n  }\n\n  /**\n   * Imprime el men\xFA\n   */\n  printMenu() { \n    console.log();\n    console.log(`${this.name}:\\n  Entrante: ${this.entrante.getName()}\\n  Primer Plato: ${this.primerPlato.getName()}\\n  Segundo Plato: ${this.segundoPlato.getName()}`)\n    if (this.postre != undefined) {\n      console.log(`  Postre: ${this.postre.getName()}\\n`)\n    }\n    console.log(\"  Informaci\xF3n nutricional: \")\n    let info = this.getNutritional()\n    for(let i of info) {\n      console.log(\"    \" + i[0] + \": \" + i[1].toFixed(2))\n    }\n    console.log(\"  Precio: \" + this.getPrice().toFixed(2) + \"\u20AC\")\n    console.log();\n  }\n\n  /**\n   * M\xE9todo que devuelve todos los platos del men\xFA en un array.\n   * @returns Array con los platos del men\xFA.\n   */\n  getPlates() {\n    return this.postre != undefined ? [this.entrante, this.primerPlato, this.segundoPlato, this.postre] : [this.entrante, this.primerPlato, this.segundoPlato]\n  }\n\n  /**\n   * M\xE9todo que devuelve la informaci\xF3n nutricional de todo el men\xFA en un Map.\n   * @returns Map con toda la informaci\xF3n nutricional.\n   */\n  getNutritional() {\n    let resultado = new Map<string,number>()\n    let proteinas: number = 0;\n    let hidratos: number = 0;\n    let l\xEDpidos: number = 0;\n    let kcal: number = 0;\n\n    if (this.postre != undefined) {\n      proteinas = this.entrante.getNutritional().get('Proteinas') + this.primerPlato.getNutritional().get('Proteinas') + this.segundoPlato.getNutritional().get('Proteinas') + this.postre.getNutritional().get('Proteinas')\n      hidratos = this.entrante.getNutritional().get('Hidratos') + this.primerPlato.getNutritional().get('Hidratos') + this.segundoPlato.getNutritional().get('Hidratos') + this.postre.getNutritional().get('Hidratos')\n      l\xEDpidos = this.entrante.getNutritional().get('L\xEDpidos') + this.primerPlato.getNutritional().get('L\xEDpidos') + this.segundoPlato.getNutritional().get('L\xEDpidos') + this.postre.getNutritional().get('L\xEDpidos')\n      kcal = this.entrante.getNutritional().get('Kcal') + this.primerPlato.getNutritional().get('Kcal') + this.segundoPlato.getNutritional().get('Kcal') + this.postre.getNutritional().get('Kcal')\n    }\n    else {\n      proteinas = this.entrante.getNutritional().get('Proteinas') + this.primerPlato.getNutritional().get('Proteinas') + this.segundoPlato.getNutritional().get('Proteinas')\n      hidratos = this.entrante.getNutritional().get('Hidratos') + this.primerPlato.getNutritional().get('Hidratos') + this.segundoPlato.getNutritional().get('Hidratos')\n      l\xEDpidos = this.entrante.getNutritional().get('L\xEDpidos') + this.primerPlato.getNutritional().get('L\xEDpidos') + this.segundoPlato.getNutritional().get('L\xEDpidos')\n      kcal = this.entrante.getNutritional().get('Kcal') + this.primerPlato.getNutritional().get('Kcal') + this.segundoPlato.getNutritional().get('Kcal')\n    }\n\n    resultado.set(\"Hidratos\", hidratos)\n    resultado.set(\"Prote\xEDnas\", proteinas)\n    resultado.set(\"L\xEDpidos\", l\xEDpidos)\n    resultado.set(\"Kcal\",kcal)\n\n    return resultado\n  }\n  /**\n   * Imprime las categor\xEDas de los alimentos de cada plato.\n   */\n  printCategories(){\n    console.log(`Categor\xEDas de los alimentos en cada plato: \\n  Entrante: ${this.entrante.getGroups()}\\n  Primer Plato: ${this.primerPlato.getGroups()}\\n  Segundo Plato: ${this.segundoPlato.getGroups()}`)\n    if (this.postre != undefined) {\n      console.log(`  Postre: ${this.postre.getGroups()}`)\n    }\n  }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"08be79600658c48cfefc9e336e040af85159483b"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1t05nde8ir=function(){return actualCoverage;};}return actualCoverage;}cov_1t05nde8ir();cov_1t05nde8ir().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_1t05nde8ir().s[1]++;exports.Menu=void 0;class Menu{/**
     * Constructor de la clase Menú, que representa un Menu, mediante un nombre, y un plato de cada categoría. El menú puede tener o no un postre.
     */constructor(name,entrante,primerPlato,segundoPlato,postre){cov_1t05nde8ir().f[0]++;cov_1t05nde8ir().s[2]++;this.name=name;cov_1t05nde8ir().s[3]++;this.entrante=entrante;cov_1t05nde8ir().s[4]++;this.primerPlato=primerPlato;cov_1t05nde8ir().s[5]++;this.segundoPlato=segundoPlato;cov_1t05nde8ir().s[6]++;this.postre=postre;cov_1t05nde8ir().s[7]++;if((cov_1t05nde8ir().b[1][0]++,entrante.getCategory()!='Entrante')||(cov_1t05nde8ir().b[1][1]++,primerPlato.getCategory()!='Primer Plato')||(cov_1t05nde8ir().b[1][2]++,segundoPlato.getCategory()!='Segundo Plato')){cov_1t05nde8ir().b[0][0]++;cov_1t05nde8ir().s[8]++;if(postre!=undefined){cov_1t05nde8ir().b[2][0]++;cov_1t05nde8ir().s[9]++;if(postre.getCategory()!='Postre'){cov_1t05nde8ir().b[3][0]++;cov_1t05nde8ir().s[10]++;throw'El postre no se corresponde con su categoría';}else{cov_1t05nde8ir().b[3][1]++;}}else{cov_1t05nde8ir().b[2][1]++;}cov_1t05nde8ir().s[11]++;throw'Se tiene que añadir un entrante, primer plato, segundo plato, obligatoriamente en ese orden.';}else{cov_1t05nde8ir().b[0][1]++;}}/**
     * Método que devuelve el precio total de menú
     * @returns Precio de menú
     */getPrice(){cov_1t05nde8ir().f[1]++;cov_1t05nde8ir().s[12]++;return this.postre!=undefined?(cov_1t05nde8ir().b[4][0]++,this.entrante.priceGenerator()+this.primerPlato.priceGenerator()+this.segundoPlato.priceGenerator()+this.postre.priceGenerator()):(cov_1t05nde8ir().b[4][1]++,this.entrante.priceGenerator()+this.primerPlato.priceGenerator()+this.segundoPlato.priceGenerator());}/**
     * Imprime el menú
     */printMenu(){cov_1t05nde8ir().f[2]++;cov_1t05nde8ir().s[13]++;console.log();cov_1t05nde8ir().s[14]++;console.log(`${this.name}:\n  Entrante: ${this.entrante.getName()}\n  Primer Plato: ${this.primerPlato.getName()}\n  Segundo Plato: ${this.segundoPlato.getName()}`);cov_1t05nde8ir().s[15]++;if(this.postre!=undefined){cov_1t05nde8ir().b[5][0]++;cov_1t05nde8ir().s[16]++;console.log(`  Postre: ${this.postre.getName()}\n`);}else{cov_1t05nde8ir().b[5][1]++;}cov_1t05nde8ir().s[17]++;console.log("  Información nutricional: ");let info=(cov_1t05nde8ir().s[18]++,this.getNutritional());cov_1t05nde8ir().s[19]++;for(let i of info){cov_1t05nde8ir().s[20]++;console.log("    "+i[0]+": "+i[1].toFixed(2));}cov_1t05nde8ir().s[21]++;console.log("  Precio: "+this.getPrice().toFixed(2)+"€");cov_1t05nde8ir().s[22]++;console.log();}/**
     * Método que devuelve todos los platos del menú en un array.
     * @returns Array con los platos del menú.
     */getPlates(){cov_1t05nde8ir().f[3]++;cov_1t05nde8ir().s[23]++;return this.postre!=undefined?(cov_1t05nde8ir().b[6][0]++,[this.entrante,this.primerPlato,this.segundoPlato,this.postre]):(cov_1t05nde8ir().b[6][1]++,[this.entrante,this.primerPlato,this.segundoPlato]);}/**
     * Método que devuelve la información nutricional de todo el menú en un Map.
     * @returns Map con toda la información nutricional.
     */getNutritional(){cov_1t05nde8ir().f[4]++;let resultado=(cov_1t05nde8ir().s[24]++,new Map());let proteinas=(cov_1t05nde8ir().s[25]++,0);let hidratos=(cov_1t05nde8ir().s[26]++,0);let lípidos=(cov_1t05nde8ir().s[27]++,0);let kcal=(cov_1t05nde8ir().s[28]++,0);cov_1t05nde8ir().s[29]++;if(this.postre!=undefined){cov_1t05nde8ir().b[7][0]++;cov_1t05nde8ir().s[30]++;proteinas=this.entrante.getNutritional().get('Proteinas')+this.primerPlato.getNutritional().get('Proteinas')+this.segundoPlato.getNutritional().get('Proteinas')+this.postre.getNutritional().get('Proteinas');cov_1t05nde8ir().s[31]++;hidratos=this.entrante.getNutritional().get('Hidratos')+this.primerPlato.getNutritional().get('Hidratos')+this.segundoPlato.getNutritional().get('Hidratos')+this.postre.getNutritional().get('Hidratos');cov_1t05nde8ir().s[32]++;lípidos=this.entrante.getNutritional().get('Lípidos')+this.primerPlato.getNutritional().get('Lípidos')+this.segundoPlato.getNutritional().get('Lípidos')+this.postre.getNutritional().get('Lípidos');cov_1t05nde8ir().s[33]++;kcal=this.entrante.getNutritional().get('Kcal')+this.primerPlato.getNutritional().get('Kcal')+this.segundoPlato.getNutritional().get('Kcal')+this.postre.getNutritional().get('Kcal');}else{cov_1t05nde8ir().b[7][1]++;cov_1t05nde8ir().s[34]++;proteinas=this.entrante.getNutritional().get('Proteinas')+this.primerPlato.getNutritional().get('Proteinas')+this.segundoPlato.getNutritional().get('Proteinas');cov_1t05nde8ir().s[35]++;hidratos=this.entrante.getNutritional().get('Hidratos')+this.primerPlato.getNutritional().get('Hidratos')+this.segundoPlato.getNutritional().get('Hidratos');cov_1t05nde8ir().s[36]++;lípidos=this.entrante.getNutritional().get('Lípidos')+this.primerPlato.getNutritional().get('Lípidos')+this.segundoPlato.getNutritional().get('Lípidos');cov_1t05nde8ir().s[37]++;kcal=this.entrante.getNutritional().get('Kcal')+this.primerPlato.getNutritional().get('Kcal')+this.segundoPlato.getNutritional().get('Kcal');}cov_1t05nde8ir().s[38]++;resultado.set("Hidratos",hidratos);cov_1t05nde8ir().s[39]++;resultado.set("Proteínas",proteinas);cov_1t05nde8ir().s[40]++;resultado.set("Lípidos",lípidos);cov_1t05nde8ir().s[41]++;resultado.set("Kcal",kcal);cov_1t05nde8ir().s[42]++;return resultado;}/**
     * Imprime las categorías de los alimentos de cada plato.
     */printCategories(){cov_1t05nde8ir().f[5]++;cov_1t05nde8ir().s[43]++;console.log(`Categorías de los alimentos en cada plato: \n  Entrante: ${this.entrante.getGroups()}\n  Primer Plato: ${this.primerPlato.getGroups()}\n  Segundo Plato: ${this.segundoPlato.getGroups()}`);cov_1t05nde8ir().s[44]++;if(this.postre!=undefined){cov_1t05nde8ir().b[8][0]++;cov_1t05nde8ir().s[45]++;console.log(`  Postre: ${this.postre.getGroups()}`);}else{cov_1t05nde8ir().b[8][1]++;}}}cov_1t05nde8ir().s[46]++;exports.Menu=Menu;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvdXN1YXJpby9wcmN0MDcvdWxsLWVzaXQtaW5mLWRzaS0yMC0yMS1wcmN0MDctbWVudS1kYXRhbW9kZWwtZ3J1cG8tZy9zcmMvTWVudS50cyIsInNvdXJjZXMiOlsiL2hvbWUvdXN1YXJpby9wcmN0MDcvdWxsLWVzaXQtaW5mLWRzaS0yMC0yMS1wcmN0MDctbWVudS1kYXRhbW9kZWwtZ3J1cG8tZy9zcmMvTWVudS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFJQSxNQUFhLElBQUk7SUFDZjs7T0FFRztJQUNILFlBQW1CLElBQVksRUFBVSxRQUFlLEVBQVUsV0FBa0IsRUFBVSxZQUFtQixFQUFVLE1BQWM7UUFBdEgsU0FBSSxHQUFKLElBQUksQ0FBUTtRQUFVLGFBQVEsR0FBUixRQUFRLENBQU87UUFBVSxnQkFBVyxHQUFYLFdBQVcsQ0FBTztRQUFVLGlCQUFZLEdBQVosWUFBWSxDQUFPO1FBQVUsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUN2SSxJQUFJLFFBQVEsQ0FBQyxXQUFXLEVBQUUsSUFBSSxVQUFVLElBQUksV0FBVyxDQUFDLFdBQVcsRUFBRSxJQUFJLGNBQWMsSUFBSSxZQUFZLENBQUMsV0FBVyxFQUFFLElBQUksZUFBZSxFQUFFO1lBQ3hJLElBQUksTUFBTSxJQUFJLFNBQVMsRUFBRTtnQkFDdkIsSUFBSSxNQUFNLENBQUMsV0FBVyxFQUFFLElBQUksUUFBUSxFQUFFO29CQUNwQyxNQUFNLDhDQUE4QyxDQUFBO2lCQUNyRDthQUNGO1lBQ0gsTUFBTSw4RkFBOEYsQ0FBQTtTQUNuRztJQUNILENBQUM7SUFFRDs7O09BR0c7SUFDSCxRQUFRO1FBQ04sT0FBTyxJQUFJLENBQUMsTUFBTSxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxjQUFjLEVBQUUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsRUFBRSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsY0FBYyxFQUFFLEdBQUcsSUFBSSxDQUFD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QUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFBO1lBQ2pOLE9BQU8sR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLGNBQWMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQTtZQUM1TSxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxjQUFjLEVBQUUsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLEVBQUUsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUE7U0FDOUw7YUFDSTtZQUNILFNBQVMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLGNBQWMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQTtZQUN0SyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxjQUFjLEVBQUUsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUE7WUFDbEssT0FBTyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsY0FBYyxFQUFFLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsY0FBYyxFQUFFLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsY0FBYyxFQUFFLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFBO1lBQzlKLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLGNBQWMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGNBQWMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQTtTQUNuSjtRQUVELFNBQVMsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLFFBQVEsQ0FBQyxDQUFBO1FBQ25DLFNBQVMsQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLFNBQVMsQ0FBQyxDQUFBO1FBQ3JDLFNBQVMsQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFBO1FBQ2pDLFNBQVMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFDLElBQUksQ0FBQyxDQUFBO1FBRTFCLE9BQU8sU0FBUyxDQUFBO0lBQ2xCLENBQUM7SUFDRDs7T0FFRztJQUNILGVBQWU7UUFDYixPQUFPLENBQUMsR0FBRyxDQUFDLDREQUE0RCxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxxQkFBcUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLEVBQUUsc0JBQXNCLElBQUksQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFBO1FBQ3hNLElBQUksSUFBSSxDQUFDLE1BQU0sSUFBSSxTQUFTLEVBQUU7WUFDNUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFBO1NBQ3BEO0lBQ0gsQ0FBQztDQUNGO0FBekZELG9CQXlGQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZvb2QgfSBmcm9tICcuL0Zvb2QnXG5pbXBvcnQge1BsYXRlfSBmcm9tICcuL1BsYXRlJ1xuXG5cbmV4cG9ydCBjbGFzcyBNZW51IHtcbiAgLyoqXG4gICAqIENvbnN0cnVjdG9yIGRlIGxhIGNsYXNlIE1lbsO6LCBxdWUgcmVwcmVzZW50YSB1biBNZW51LCBtZWRpYW50ZSB1biBub21icmUsIHkgdW4gcGxhdG8gZGUgY2FkYSBjYXRlZ29yw61hLiBFbCBtZW7DuiBwdWVkZSB0ZW5lciBvIG5vIHVuIHBvc3RyZS5cbiAgICovXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBuYW1lOiBzdHJpbmcsIHByaXZhdGUgZW50cmFudGU6IFBsYXRlLCBwcml2YXRlIHByaW1lclBsYXRvOiBQbGF0ZSwgcHJpdmF0ZSBzZWd1bmRvUGxhdG86IFBsYXRlLCBwcml2YXRlIHBvc3RyZT86IFBsYXRlKXtcbiAgICBpZiAoZW50cmFudGUuZ2V0Q2F0ZWdvcnkoKSAhPSAnRW50cmFudGUnIHx8IHByaW1lclBsYXRvLmdldENhdGVnb3J5KCkgIT0gJ1ByaW1lciBQbGF0bycgfHwgc2VndW5kb1BsYXRvLmdldENhdGVnb3J5KCkgIT0gJ1NlZ3VuZG8gUGxhdG8nKSB7XG4gICAgICBpZiAocG9zdHJlICE9IHVuZGVmaW5lZCkge1xuICAgICAgICBpZiAocG9zdHJlLmdldENhdGVnb3J5KCkgIT0gJ1Bvc3RyZScpIHtcbiAgICAgICAgICB0aHJvdyAnRWwgcG9zdHJlIG5vIHNlIGNvcnJlc3BvbmRlIGNvbiBzdSBjYXRlZ29yw61hJ1xuICAgICAgICB9XG4gICAgICB9XG4gICAgdGhyb3cgJ1NlIHRpZW5lIHF1ZSBhw7FhZGlyIHVuIGVudHJhbnRlLCBwcmltZXIgcGxhdG8sIHNlZ3VuZG8gcGxhdG8sIG9ibGlnYXRvcmlhbWVudGUgZW4gZXNlIG9yZGVuLidcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogTcOpdG9kbyBxdWUgZGV2dWVsdmUgZWwgcHJlY2lvIHRvdGFsIGRlIG1lbsO6XG4gICAqIEByZXR1cm5zIFByZWNpbyBkZSBtZW7DulxuICAgKi9cbiAgZ2V0UHJpY2UoKSB7XG4gICAgcmV0dXJuIHRoaXMucG9zdHJlICE9IHVuZGVmaW5lZCA/IHRoaXMuZW50cmFudGUucHJpY2VHZW5lcmF0b3IoKSArIHRoaXMucHJpbWVyUGxhdG8ucHJpY2VHZW5lcmF0b3IoKSArIHRoaXMuc2VndW5kb1BsYXRvLnByaWNlR2VuZXJhdG9yKCkgKyB0aGlzLnBvc3RyZS5wcmljZUdlbmVyYXRvcigpIDogdGhpcy5lbnRyYW50ZS5wcmljZUdlbmVyYXRvcigpICsgdGhpcy5wcmltZXJQbGF0by5wcmljZUdlbmVyYXRvcigpICsgdGhpcy5zZWd1bmRvUGxhdG8ucHJpY2VHZW5lcmF0b3IoKVxuICB9XG5cbiAgLyoqXG4gICAqIEltcHJpbWUgZWwgbWVuw7pcbiAgICovXG4gIHByaW50TWVudSgpIHsgXG4gICAgY29uc29sZS5sb2coKTtcbiAgICBjb25zb2xlLmxvZyhgJHt0aGlzLm5hbWV9OlxcbiAgRW50cmFudGU6ICR7dGhpcy5lbnRyYW50ZS5nZXROYW1lKCl9XFxuICBQcmltZXIgUGxhdG86ICR7dGhpcy5wcmltZXJQbGF0by5nZXROYW1lKCl9XFxuICBTZWd1bmRvIFBsYXRvOiAke3RoaXMuc2VndW5kb1BsYXRvLmdldE5hbWUoKX1gKVxuICAgIGlmICh0aGlzLnBvc3RyZSAhPSB1bmRlZmluZWQpIHtcbiAgICAgIGNvbnNvbGUubG9nKGAgIFBvc3RyZTogJHt0aGlzLnBvc3RyZS5nZXROYW1lKCl9XFxuYClcbiAgICB9XG4gICAgY29uc29sZS5sb2coXCIgIEluZm9ybWFjacOzbiBudXRyaWNpb25hbDogXCIpXG4gICAgbGV0IGluZm8gPSB0aGlzLmdldE51dHJpdGlvbmFsKClcbiAgICBmb3IobGV0IGkgb2YgaW5mbykge1xuICAgICAgY29uc29sZS5sb2coXCIgICAgXCIgKyBpWzBdICsgXCI6IFwiICsgaVsxXS50b0ZpeGVkKDIpKVxuICAgIH1cbiAgICBjb25zb2xlLmxvZyhcIiAgUHJlY2lvOiBcIiArIHRoaXMuZ2V0UHJpY2UoKS50b0ZpeGVkKDIpICsgXCLigqxcIilcbiAgICBjb25zb2xlLmxvZygpO1xuICB9XG5cbiAgLyoqXG4gICAqIE3DqXRvZG8gcXVlIGRldnVlbHZlIHRvZG9zIGxvcyBwbGF0b3MgZGVsIG1lbsO6IGVuIHVuIGFycmF5LlxuICAgKiBAcmV0dXJucyBBcnJheSBjb24gbG9zIHBsYXRvcyBkZWwgbWVuw7ouXG4gICAqL1xuICBnZXRQbGF0ZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMucG9zdHJlICE9IHVuZGVmaW5lZCA/IFt0aGlzLmVudHJhbnRlLCB0aGlzLnByaW1lclBsYXRvLCB0aGlzLnNlZ3VuZG9QbGF0bywgdGhpcy5wb3N0cmVdIDogW3RoaXMuZW50cmFudGUsIHRoaXMucHJpbWVyUGxhdG8sIHRoaXMuc2VndW5kb1BsYXRvXVxuICB9XG5cbiAgLyoqXG4gICAqIE3DqXRvZG8gcXVlIGRldnVlbHZlIGxhIGluZm9ybWFjacOzbiBudXRyaWNpb25hbCBkZSB0b2RvIGVsIG1lbsO6IGVuIHVuIE1hcC5cbiAgICogQHJldHVybnMgTWFwIGNvbiB0b2RhIGxhIGluZm9ybWFjacOzbiBudXRyaWNpb25hbC5cbiAgICovXG4gIGdldE51dHJpdGlvbmFsKCkge1xuICAgIGxldCByZXN1bHRhZG8gPSBuZXcgTWFwPHN0cmluZyxudW1iZXI+KClcbiAgICBsZXQgcHJvdGVpbmFzOiBudW1iZXIgPSAwO1xuICAgIGxldCBoaWRyYXRvczogbnVtYmVyID0gMDtcbiAgICBsZXQgbMOtcGlkb3M6IG51bWJlciA9IDA7XG4gICAgbGV0IGtjYWw6IG51bWJlciA9IDA7XG5cbiAgICBpZiAodGhpcy5wb3N0cmUgIT0gdW5kZWZpbmVkKSB7XG4gICAgICBwcm90ZWluYXMgPSB0aGlzLmVudHJhbnRlLmdldE51dHJpdGlvbmFsKCkuZ2V0KCdQcm90ZWluYXMnKSArIHRoaXMucHJpbWVyUGxhdG8uZ2V0TnV0cml0aW9uYWwoKS5nZXQoJ1Byb3RlaW5hcycpICsgdGhpcy5zZWd1bmRvUGxhdG8uZ2V0TnV0cml0aW9uYWwoKS5nZXQoJ1Byb3RlaW5hcycpICsgdGhpcy5wb3N0cmUuZ2V0TnV0cml0aW9uYWwoKS5nZXQoJ1Byb3RlaW5hcycpXG4gICAgICBoaWRyYXRvcyA9IHRoaXMuZW50cmFudGUuZ2V0TnV0cml0aW9uYWwoKS5nZXQoJ0hpZHJhdG9zJykgKyB0aGlzLnByaW1lclBsYXRvLmdldE51dHJpdGlvbmFsKCkuZ2V0KCdIaWRyYXRvcycpICsgdGhpcy5zZWd1bmRvUGxhdG8uZ2V0TnV0cml0aW9uYWwoKS5nZXQoJ0hpZHJhdG9zJykgKyB0aGlzLnBvc3RyZS5nZXROdXRyaXRpb25hbCgpLmdldCgnSGlkcmF0b3MnKVxuICAgICAgbMOtcGlkb3MgPSB0aGlzLmVudHJhbnRlLmdldE51dHJpdGlvbmFsKCkuZ2V0KCdMw61waWRvcycpICsgdGhpcy5wcmltZXJQbGF0by5nZXROdXRyaXRpb25hbCgpLmdldCgnTMOtcGlkb3MnKSArIHRoaXMuc2VndW5kb1BsYXRvLmdldE51dHJpdGlvbmFsKCkuZ2V0KCdMw61waWRvcycpICsgdGhpcy5wb3N0cmUuZ2V0TnV0cml0aW9uYWwoKS5nZXQoJ0zDrXBpZG9zJylcbiAgICAgIGtjYWwgPSB0aGlzLmVudHJhbnRlLmdldE51dHJpdGlvbmFsKCkuZ2V0KCdLY2FsJykgKyB0aGlzLnByaW1lclBsYXRvLmdldE51dHJpdGlvbmFsKCkuZ2V0KCdLY2FsJykgKyB0aGlzLnNlZ3VuZG9QbGF0by5nZXROdXRyaXRpb25hbCgpLmdldCgnS2NhbCcpICsgdGhpcy5wb3N0cmUuZ2V0TnV0cml0aW9uYWwoKS5nZXQoJ0tjYWwnKVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHByb3RlaW5hcyA9IHRoaXMuZW50cmFudGUuZ2V0TnV0cml0aW9uYWwoKS5nZXQoJ1Byb3RlaW5hcycpICsgdGhpcy5wcmltZXJQbGF0by5nZXROdXRyaXRpb25hbCgpLmdldCgnUHJvdGVpbmFzJykgKyB0aGlzLnNlZ3VuZG9QbGF0by5nZXROdXRyaXRpb25hbCgpLmdldCgnUHJvdGVpbmFzJylcbiAgICAgIGhpZHJhdG9zID0gdGhpcy5lbnRyYW50ZS5nZXROdXRyaXRpb25hbCgpLmdldCgnSGlkcmF0b3MnKSArIHRoaXMucHJpbWVyUGxhdG8uZ2V0TnV0cml0aW9uYWwoKS5nZXQoJ0hpZHJhdG9zJykgKyB0aGlzLnNlZ3VuZG9QbGF0by5nZXROdXRyaXRpb25hbCgpLmdldCgnSGlkcmF0b3MnKVxuICAgICAgbMOtcGlkb3MgPSB0aGlzLmVudHJhbnRlLmdldE51dHJpdGlvbmFsKCkuZ2V0KCdMw61waWRvcycpICsgdGhpcy5wcmltZXJQbGF0by5nZXROdXRyaXRpb25hbCgpLmdldCgnTMOtcGlkb3MnKSArIHRoaXMuc2VndW5kb1BsYXRvLmdldE51dHJpdGlvbmFsKCkuZ2V0KCdMw61waWRvcycpXG4gICAgICBrY2FsID0gdGhpcy5lbnRyYW50ZS5nZXROdXRyaXRpb25hbCgpLmdldCgnS2NhbCcpICsgdGhpcy5wcmltZXJQbGF0by5nZXROdXRyaXRpb25hbCgpLmdldCgnS2NhbCcpICsgdGhpcy5zZWd1bmRvUGxhdG8uZ2V0TnV0cml0aW9uYWwoKS5nZXQoJ0tjYWwnKVxuICAgIH1cblxuICAgIHJlc3VsdGFkby5zZXQoXCJIaWRyYXRvc1wiLCBoaWRyYXRvcylcbiAgICByZXN1bHRhZG8uc2V0KFwiUHJvdGXDrW5hc1wiLCBwcm90ZWluYXMpXG4gICAgcmVzdWx0YWRvLnNldChcIkzDrXBpZG9zXCIsIGzDrXBpZG9zKVxuICAgIHJlc3VsdGFkby5zZXQoXCJLY2FsXCIsa2NhbClcblxuICAgIHJldHVybiByZXN1bHRhZG9cbiAgfVxuICAvKipcbiAgICogSW1wcmltZSBsYXMgY2F0ZWdvcsOtYXMgZGUgbG9zIGFsaW1lbnRvcyBkZSBjYWRhIHBsYXRvLlxuICAgKi9cbiAgcHJpbnRDYXRlZ29yaWVzKCl7XG4gICAgY29uc29sZS5sb2coYENhdGVnb3LDrWFzIGRlIGxvcyBhbGltZW50b3MgZW4gY2FkYSBwbGF0bzogXFxuICBFbnRyYW50ZTogJHt0aGlzLmVudHJhbnRlLmdldEdyb3VwcygpfVxcbiAgUHJpbWVyIFBsYXRvOiAke3RoaXMucHJpbWVyUGxhdG8uZ2V0R3JvdXBzKCl9XFxuICBTZWd1bmRvIFBsYXRvOiAke3RoaXMuc2VndW5kb1BsYXRvLmdldEdyb3VwcygpfWApXG4gICAgaWYgKHRoaXMucG9zdHJlICE9IHVuZGVmaW5lZCkge1xuICAgICAgY29uc29sZS5sb2coYCAgUG9zdHJlOiAke3RoaXMucG9zdHJlLmdldEdyb3VwcygpfWApXG4gICAgfVxuICB9XG59XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,