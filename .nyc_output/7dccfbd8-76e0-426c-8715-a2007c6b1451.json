{"/home/usuario/prct07-menu-datamodel-grupo-g/src/Food.ts":{"path":"/home/usuario/prct07-menu-datamodel-grupo-g/src/Food.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":25}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":27}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":29}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":33}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":33}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":29}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":27}},"9":{"start":{"line":15,"column":8},"end":{"line":15,"column":25}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":26}},"11":{"start":{"line":21,"column":8},"end":{"line":21,"column":27}},"12":{"start":{"line":24,"column":8},"end":{"line":24,"column":29}},"13":{"start":{"line":27,"column":8},"end":{"line":27,"column":29}},"14":{"start":{"line":30,"column":8},"end":{"line":30,"column":27}},"15":{"start":{"line":33,"column":8},"end":{"line":33,"column":26}},"16":{"start":{"line":36,"column":8},"end":{"line":36,"column":71}},"17":{"start":{"line":39,"column":8},"end":{"line":39,"column":25}},"18":{"start":{"line":42,"column":8},"end":{"line":42,"column":27}},"19":{"start":{"line":45,"column":8},"end":{"line":45,"column":29}},"20":{"start":{"line":48,"column":8},"end":{"line":48,"column":33}},"21":{"start":{"line":51,"column":8},"end":{"line":51,"column":33}},"22":{"start":{"line":54,"column":8},"end":{"line":54,"column":29}},"23":{"start":{"line":57,"column":8},"end":{"line":57,"column":27}},"24":{"start":{"line":60,"column":0},"end":{"line":60,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":72},"end":{"line":13,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":14},"end":{"line":16,"column":5}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":15},"end":{"line":19,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":16},"end":{"line":22,"column":5}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":18},"end":{"line":25,"column":5}},"line":23},"5":{"name":"(anonymous_5)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":18},"end":{"line":28,"column":5}},"line":26},"6":{"name":"(anonymous_6)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":16},"end":{"line":31,"column":5}},"line":29},"7":{"name":"(anonymous_7)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":15},"end":{"line":34,"column":5}},"line":32},"8":{"name":"(anonymous_8)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":14},"end":{"line":37,"column":5}},"line":35},"9":{"name":"(anonymous_9)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":18},"end":{"line":40,"column":5}},"line":38},"10":{"name":"(anonymous_10)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":20},"end":{"line":43,"column":5}},"line":41},"11":{"name":"(anonymous_11)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":22},"end":{"line":46,"column":5}},"line":44},"12":{"name":"(anonymous_12)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":26},"end":{"line":49,"column":5}},"line":47},"13":{"name":"(anonymous_13)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":26},"end":{"line":52,"column":5}},"line":50},"14":{"name":"(anonymous_14)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":22},"end":{"line":55,"column":5}},"line":53},"15":{"name":"(anonymous_15)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":20},"end":{"line":58,"column":5}},"line":56}},"branchMap":{},"s":{"0":1,"1":1,"2":5,"3":5,"4":5,"5":5,"6":5,"7":5,"8":5,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1},"f":{"0":5,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/prct07-menu-datamodel-grupo-g/src/Food.ts","sources":["/home/usuario/prct07-menu-datamodel-grupo-g/src/Food.ts"],"names":[],"mappings":";;;AAEA,MAAa,IAAI;IACf,YAAoB,IAAY,EAAU,KAAgB,EAAU,MAAc,EAAU,QAAgB,EAClG,QAAgB,EAAU,MAAc,EAAU,KAAa;QADrD,SAAI,GAAJ,IAAI,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAW;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAQ;QAClG,aAAQ,GAAR,QAAQ,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAQ;IAAE,CAAC;IAE5E,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;IAChE,CAAC;IAED,OAAO,CAAC,IAAY;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,QAAQ,CAAC,KAAgB;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAED,SAAS,CAAC,MAAc;QACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,WAAW,CAAC,QAAgB;QAC1B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,WAAW,CAAC,QAAgB;QAC1B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,SAAS,CAAC,MAAc;QACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,KAAa;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;CACF;AA/DD,oBA+DC","sourcesContent":["type FoodGroup = \"Carne\" | \"Pescado\" | \"Moluscos\" |\"Huevos\" | \"Tofu\" | \"Frutos secos\" | \"Semillas\" | \"Legumbres\" | \"Verduras\" | \"Hortalizas\" | \"Leche\" | \"Quesos\" | \"Embutidos\" | \"Cereales\" | \"Frutas\"; \n\nexport class Food {\n  constructor(private name: string, private group: FoodGroup, private origin: string, private hydrates: number, \n    private proteins: number, private lipids: number, private price: number){}\n  \n  getName() {\n    return this.name;\n  }\n\n  getGroup() {\n    return this.group;\n  }\n\n  getOrigin() {\n    return this.origin;\n  }\n\n  getHydrates() {\n    return this.hydrates;\n  }\n\n  getProteins() {\n    return this.proteins;\n  }\n\n  getLipids() {\n    return this.lipids;\n  }\n\n  getPrice() {\n    return this.price;\n  }\n\n  getKcal() {\n    return this.hydrates * 4 + this.proteins * 4 + this.lipids * 9\n  }\n\n  setName(name: string) {\n    this.name = name;\n  }\n\n  setGroup(group: FoodGroup) {\n    this.group = group;\n  }\n\n  setOrigin(origin: string) {\n    this.origin = origin;\n  }\n\n  setHydrates(hydrates: number) {\n    this.hydrates = hydrates;\n  }\n\n  setProteins(proteins: number) {\n    this.proteins = proteins;\n  }\n\n  setLipids(lipids: number) {\n    this.lipids = lipids;\n  }\n\n  setPrice(price: number) {\n    this.price = price;\n  }\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a8993e556b5996d964c74dc92bcefcc3ccea3df0","contentHash":"20289defad3813ec4edbe820adf50cd029786e3910153d62fe84bd63a90420df"},"/home/usuario/prct07-menu-datamodel-grupo-g/src/Platos.ts":{"path":"/home/usuario/prct07-menu-datamodel-grupo-g/src/Platos.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":23}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":25}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":25}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":33}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":25}},"6":{"start":{"line":14,"column":8},"end":{"line":14,"column":25}},"7":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"8":{"start":{"line":18,"column":12},"end":{"line":18,"column":43}},"9":{"start":{"line":22,"column":8},"end":{"line":22,"column":29}},"10":{"start":{"line":25,"column":24},"end":{"line":25,"column":33}},"11":{"start":{"line":26,"column":24},"end":{"line":26,"column":25}},"12":{"start":{"line":27,"column":23},"end":{"line":27,"column":24}},"13":{"start":{"line":28,"column":22},"end":{"line":28,"column":23}},"14":{"start":{"line":29,"column":19},"end":{"line":29,"column":20}},"15":{"start":{"line":30,"column":8},"end":{"line":36,"column":9}},"16":{"start":{"line":31,"column":29},"end":{"line":31,"column":39}},"17":{"start":{"line":32,"column":12},"end":{"line":32,"column":70}},"18":{"start":{"line":33,"column":12},"end":{"line":33,"column":68}},"19":{"start":{"line":34,"column":12},"end":{"line":34,"column":64}},"20":{"start":{"line":35,"column":12},"end":{"line":35,"column":56}},"21":{"start":{"line":37,"column":8},"end":{"line":37,"column":44}},"22":{"start":{"line":38,"column":8},"end":{"line":38,"column":46}},"23":{"start":{"line":39,"column":8},"end":{"line":39,"column":42}},"24":{"start":{"line":40,"column":8},"end":{"line":40,"column":36}},"25":{"start":{"line":41,"column":8},"end":{"line":41,"column":25}},"26":{"start":{"line":44,"column":24},"end":{"line":44,"column":25}},"27":{"start":{"line":45,"column":25},"end":{"line":45,"column":26}},"28":{"start":{"line":46,"column":25},"end":{"line":46,"column":26}},"29":{"start":{"line":47,"column":8},"end":{"line":51,"column":9}},"30":{"start":{"line":48,"column":12},"end":{"line":48,"column":40}},"31":{"start":{"line":49,"column":12},"end":{"line":49,"column":30}},"32":{"start":{"line":50,"column":12},"end":{"line":50,"column":58}},"33":{"start":{"line":52,"column":8},"end":{"line":52,"column":24}},"34":{"start":{"line":53,"column":8},"end":{"line":53,"column":26}},"35":{"start":{"line":56,"column":24},"end":{"line":56,"column":26}},"36":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"37":{"start":{"line":58,"column":12},"end":{"line":58,"column":44}},"38":{"start":{"line":60,"column":8},"end":{"line":60,"column":25}},"39":{"start":{"line":63,"column":0},"end":{"line":63,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":38},"end":{"line":9,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":14},"end":{"line":12,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":14},"end":{"line":15,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":16},"end":{"line":20,"column":5}},"line":16},"4":{"name":"(anonymous_4)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":18},"end":{"line":23,"column":5}},"line":21},"5":{"name":"(anonymous_5)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":21},"end":{"line":42,"column":5}},"line":24},"6":{"name":"(anonymous_6)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":21},"end":{"line":54,"column":5}},"line":43},"7":{"name":"(anonymous_7)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":16},"end":{"line":61,"column":5}},"line":55}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/prct07-menu-datamodel-grupo-g/src/Platos.ts","sources":["/home/usuario/prct07-menu-datamodel-grupo-g/src/Platos.ts"],"names":[],"mappings":";;;AAKA,MAAa,KAAK;IAEhB,YAAoB,IAAY,EAAW,IAAuB,EAAU,QAAkB;QAA1E,SAAI,GAAJ,IAAI,CAAQ;QAAW,SAAI,GAAJ,IAAI,CAAmB;QAAU,aAAQ,GAAR,QAAQ,CAAU;IAC9F,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED,SAAS;QACP,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;SAChC;IACH,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,cAAc;QACZ,IAAI,SAAS,GAAG,IAAI,GAAG,EAAiB,CAAA;QACxC,IAAI,SAAS,GAAW,CAAC,CAAC;QAC1B,IAAI,QAAQ,GAAW,CAAC,CAAC;QACzB,IAAI,OAAO,GAAW,CAAC,CAAC;QACxB,IAAI,IAAI,GAAW,CAAC,CAAC;QACrB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;YACvB,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,GAAC,GAAG,CAAC;YAC1B,SAAS,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,UAAU,CAAC,CAAC;YAC1D,QAAQ,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,UAAU,CAAC,CAAC;YACxD,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,GAAG,UAAU,CAAC,CAAC;YACpD,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,UAAU,CAAC,CAAA;SAC5C;QAED,SAAS,CAAC,GAAG,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;QACnC,SAAS,CAAC,GAAG,CAAC,WAAW,EAAC,SAAS,CAAC,CAAC;QACrC,SAAS,CAAC,GAAG,CAAC,SAAS,EAAC,OAAO,CAAC,CAAC;QACjC,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;QAE3B,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,cAAc;QACZ,IAAI,SAAS,GAAW,CAAC,CAAC;QAC1B,IAAI,UAAU,GAAW,CAAC,CAAC;QAC3B,IAAI,UAAU,GAAW,CAAC,CAAC;QAE3B,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;YACvB,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YAC5B,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAClB,UAAU,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,GAAC,IAAI,CAAA;SAC5C;QAED,UAAU,IAAI,CAAC,CAAC,CAAC,yBAAyB;QAE1C,OAAO,UAAU,CAAA;IACnB,CAAC;IAED,SAAS;QACP,IAAI,SAAS,GAAa,EAAE,CAAA;QAC5B,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,EAAC;YACtB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAA;SAChC;QACD,OAAO,SAAS,CAAA;IAClB,CAAC;CAEF;AArED,sBAqEC","sourcesContent":["import {Food} from './Food'\nimport * as food from './list_food'\n\ntype Category = \"Entrante\" | \"Primer Plato\" | \"Segundo Plato\" | \"Postre\"\n\nexport class Plate {\n  \n  constructor(private name: string,  private food: Map<Food, number>, private category: Category){\n  }\n\n  getName() {\n    return this.name;\n  }\n  \n  getFood() {\n    return this.food;\n  }\n\n  printFood() {\n    for (let food of this.food) {\n      console.log(food[0].getName());\n    } \n  }\n\n  getCategory() {\n    return this.category;\n  }\n\n  getNutritional() { \n    let resultado = new Map<string,number>()\n    let proteinas: number = 0;\n    let hidratos: number = 0;\n    let lípidos: number = 0;\n    let kcal: number = 0;\n    for (let i of this.food) {\n      let multiplier = i[1]/100;\n      proteinas = proteinas + (i[0].getProteins() * multiplier);\n      hidratos = hidratos + (i[0].getHydrates() * multiplier);\n      lípidos = lípidos + (i[0].getLipids() * multiplier);\n      kcal = kcal + (i[0].getKcal() * multiplier)\n    }\n    \n    resultado.set(\"Hidratos\",hidratos);\n    resultado.set(\"Proteinas\",proteinas);\n    resultado.set(\"Lípidos\",lípidos);\n    resultado.set(\"Kcal\", kcal)\n\n    return resultado;\n  }\n  \n  priceGenerator() { //calcular el precio del plato según los alimentos que tenga y su proporcion\n    let price1000: number = 0;\n    let foodWeight: number = 0;\n    let totalPrice: number = 0;\n\n    for (let i of this.food) {\n      price1000 = i[0].getPrice();\n      foodWeight = i[1];\n      totalPrice += (foodWeight * price1000)/1000\n    }\n\n    totalPrice += 2; //Precio por mano de obra\n\n    return totalPrice\n  }\n\n  getGroups() {\n    let resultado: string[] = []\n    for (let i of this.food){\n      resultado.push(i[0].getGroup())\n    }\n    return resultado\n  }\n\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6cc2c1c3a1b7b73a6a90e43e61bd9f9ec69cfd75","contentHash":"cc5db89388464923074e0c4dca428c11abf2bb2b7b739894d9201a065ba27f53"}}